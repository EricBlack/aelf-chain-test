// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kernel.proto

package aelf

import (
	aelf "aelf"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactionStatus int32

const (
	TransactionStatus_UnknownTransactionStatus TransactionStatus = 0
	TransactionStatus_TransactionExecuting     TransactionStatus = 1
	TransactionStatus_TransactionExecuted      TransactionStatus = 2
)

var TransactionStatus_name = map[int32]string{
	0: "UnknownTransactionStatus",
	1: "TransactionExecuting",
	2: "TransactionExecuted",
}

var TransactionStatus_value = map[string]int32{
	"UnknownTransactionStatus": 0,
	"TransactionExecuting":     1,
	"TransactionExecuted":      2,
}

func (x TransactionStatus) String() string {
	return proto.EnumName(TransactionStatus_name, int32(x))
}

func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{0}
}

type SignatureStatus int32

const (
	SignatureStatus_UnknownSignatureStatus SignatureStatus = 0
	SignatureStatus_SignatureValid         SignatureStatus = 1
	SignatureStatus_SignatureInvalid       SignatureStatus = -1
)

var SignatureStatus_name = map[int32]string{
	0:  "UnknownSignatureStatus",
	1:  "SignatureValid",
	-1: "SignatureInvalid",
}

var SignatureStatus_value = map[string]int32{
	"UnknownSignatureStatus": 0,
	"SignatureValid":         1,
	"SignatureInvalid":       -1,
}

func (x SignatureStatus) String() string {
	return proto.EnumName(SignatureStatus_name, int32(x))
}

func (SignatureStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{1}
}

type RefBlockStatus int32

const (
	RefBlockStatus_UnknownRefBlockStatus RefBlockStatus = 0
	RefBlockStatus_RefBlockValid         RefBlockStatus = 1
	RefBlockStatus_RefBlockInvalid       RefBlockStatus = -1
	RefBlockStatus_RefBlockExpired       RefBlockStatus = -2
	RefBlockStatus_FutureRefBlock        RefBlockStatus = -3
)

var RefBlockStatus_name = map[int32]string{
	0:  "UnknownRefBlockStatus",
	1:  "RefBlockValid",
	-1: "RefBlockInvalid",
	-2: "RefBlockExpired",
	-3: "FutureRefBlock",
}

var RefBlockStatus_value = map[string]int32{
	"UnknownRefBlockStatus": 0,
	"RefBlockValid":         1,
	"RefBlockInvalid":       -1,
	"RefBlockExpired":       -2,
	"FutureRefBlock":        -3,
}

func (x RefBlockStatus) String() string {
	return proto.EnumName(RefBlockStatus_name, int32(x))
}

func (RefBlockStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{2}
}

// For failed transactions, its status follows the Min of
// its own status and its inline transactions'
type ExecutionStatus int32

const (
	ExecutionStatus_Undefined ExecutionStatus = 0
	// Successful =>
	ExecutionStatus_Executed ExecutionStatus = 1
	// Failed =>
	//   Infrastructure reasons
	ExecutionStatus_Canceled    ExecutionStatus = -1
	ExecutionStatus_SystemError ExecutionStatus = -2
	//   Contract reasons
	ExecutionStatus_ContractError               ExecutionStatus = -10
	ExecutionStatus_ExceededMaxCallDepth        ExecutionStatus = -11
	ExecutionStatus_InsufficientTransactionFees ExecutionStatus = -12
	// Pre-failed
	ExecutionStatus_Prefailed ExecutionStatus = -99
)

var ExecutionStatus_name = map[int32]string{
	0:   "Undefined",
	1:   "Executed",
	-1:  "Canceled",
	-2:  "SystemError",
	-10: "ContractError",
	-11: "ExceededMaxCallDepth",
	-12: "InsufficientTransactionFees",
	-99: "Prefailed",
}

var ExecutionStatus_value = map[string]int32{
	"Undefined":                   0,
	"Executed":                    1,
	"Canceled":                    -1,
	"SystemError":                 -2,
	"ContractError":               -10,
	"ExceededMaxCallDepth":        -11,
	"InsufficientTransactionFees": -12,
	"Prefailed":                   -99,
}

func (x ExecutionStatus) String() string {
	return proto.EnumName(ExecutionStatus_name, int32(x))
}

func (ExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{3}
}

type DataAccessMode int32

const (
	DataAccessMode_ReadOnlyAccountSharing  DataAccessMode = 0
	DataAccessMode_ReadWriteAccountSharing DataAccessMode = 1
	DataAccessMode_AccountSpecific         DataAccessMode = 2
)

var DataAccessMode_name = map[int32]string{
	0: "ReadOnlyAccountSharing",
	1: "ReadWriteAccountSharing",
	2: "AccountSpecific",
}

var DataAccessMode_value = map[string]int32{
	"ReadOnlyAccountSharing":  0,
	"ReadWriteAccountSharing": 1,
	"AccountSpecific":         2,
}

func (x DataAccessMode) String() string {
	return proto.EnumName(DataAccessMode_name, int32(x))
}

func (DataAccessMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{4}
}

type BlockValidationResult int32

const (
	// The chosen one!
	BlockValidationResult_Success BlockValidationResult = 0
	// Cache them.
	BlockValidationResult_NotMiner                           BlockValidationResult = 11
	BlockValidationResult_InvalidTimeSlot                    BlockValidationResult = 12
	BlockValidationResult_FailedToCheckConsensusInvalidation BlockValidationResult = 13
	BlockValidationResult_DoingRollback                      BlockValidationResult = 14
	// Discard.
	BlockValidationResult_BlockIsNull                   BlockValidationResult = 101
	BlockValidationResult_SameWithCurrentRound          BlockValidationResult = 102
	BlockValidationResult_IncorrectConsensusTransaction BlockValidationResult = 103
	BlockValidationResult_ParseProblem                  BlockValidationResult = 104
	BlockValidationResult_NoTransaction                 BlockValidationResult = 105
	BlockValidationResult_IncorrectTxMerkleTreeRoot     BlockValidationResult = 106
	BlockValidationResult_IncorrectSideChainInfo        BlockValidationResult = 107
	BlockValidationResult_IncorrectPoWResult            BlockValidationResult = 108
	BlockValidationResult_NotImplementConsensus         BlockValidationResult = 109
)

var BlockValidationResult_name = map[int32]string{
	0:   "Success",
	11:  "NotMiner",
	12:  "InvalidTimeSlot",
	13:  "FailedToCheckConsensusInvalidation",
	14:  "DoingRollback",
	101: "BlockIsNull",
	102: "SameWithCurrentRound",
	103: "IncorrectConsensusTransaction",
	104: "ParseProblem",
	105: "NoTransaction",
	106: "IncorrectTxMerkleTreeRoot",
	107: "IncorrectSideChainInfo",
	108: "IncorrectPoWResult",
	109: "NotImplementConsensus",
}

var BlockValidationResult_value = map[string]int32{
	"Success":                            0,
	"NotMiner":                           11,
	"InvalidTimeSlot":                    12,
	"FailedToCheckConsensusInvalidation": 13,
	"DoingRollback":                      14,
	"BlockIsNull":                        101,
	"SameWithCurrentRound":               102,
	"IncorrectConsensusTransaction":      103,
	"ParseProblem":                       104,
	"NoTransaction":                      105,
	"IncorrectTxMerkleTreeRoot":          106,
	"IncorrectSideChainInfo":             107,
	"IncorrectPoWResult":                 108,
	"NotImplementConsensus":              109,
}

func (x BlockValidationResult) String() string {
	return proto.EnumName(BlockValidationResult_name, int32(x))
}

func (BlockValidationResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{5}
}

type ChainStateMergingStatus int32

const (
	ChainStateMergingStatus_Common  ChainStateMergingStatus = 0
	ChainStateMergingStatus_Merging ChainStateMergingStatus = 1
	ChainStateMergingStatus_Merged  ChainStateMergingStatus = 2
)

var ChainStateMergingStatus_name = map[int32]string{
	0: "Common",
	1: "Merging",
	2: "Merged",
}

var ChainStateMergingStatus_value = map[string]int32{
	"Common":  0,
	"Merging": 1,
	"Merged":  2,
}

func (x ChainStateMergingStatus) String() string {
	return proto.EnumName(ChainStateMergingStatus_name, int32(x))
}

func (ChainStateMergingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{6}
}

type ChainBlockLinkExecutionStatus int32

const (
	ChainBlockLinkExecutionStatus_ExecutionNone    ChainBlockLinkExecutionStatus = 0
	ChainBlockLinkExecutionStatus_ExecutionSuccess ChainBlockLinkExecutionStatus = 1
	ChainBlockLinkExecutionStatus_ExecutionFailed  ChainBlockLinkExecutionStatus = 2
)

var ChainBlockLinkExecutionStatus_name = map[int32]string{
	0: "ExecutionNone",
	1: "ExecutionSuccess",
	2: "ExecutionFailed",
}

var ChainBlockLinkExecutionStatus_value = map[string]int32{
	"ExecutionNone":    0,
	"ExecutionSuccess": 1,
	"ExecutionFailed":  2,
}

func (x ChainBlockLinkExecutionStatus) String() string {
	return proto.EnumName(ChainBlockLinkExecutionStatus_name, int32(x))
}

func (ChainBlockLinkExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{7}
}

type TransactionReceipt struct {
	TransactionId        *aelf.Hash        `protobuf:"bytes,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	Transaction          *aelf.Transaction `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	SignatureStatus      SignatureStatus   `protobuf:"varint,3,opt,name=SignatureStatus,proto3,enum=aelf.SignatureStatus" json:"SignatureStatus,omitempty"`
	RefBlockStatus       RefBlockStatus    `protobuf:"varint,4,opt,name=RefBlockStatus,proto3,enum=aelf.RefBlockStatus" json:"RefBlockStatus,omitempty"`
	TransactionStatus    TransactionStatus `protobuf:"varint,5,opt,name=TransactionStatus,proto3,enum=aelf.TransactionStatus" json:"TransactionStatus,omitempty"`
	IsSystemTxn          bool              `protobuf:"varint,6,opt,name=IsSystemTxn,proto3" json:"IsSystemTxn,omitempty"`
	ExecutedBlockNumber  int64             `protobuf:"varint,7,opt,name=ExecutedBlockNumber,proto3" json:"ExecutedBlockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransactionReceipt) Reset()         { *m = TransactionReceipt{} }
func (m *TransactionReceipt) String() string { return proto.CompactTextString(m) }
func (*TransactionReceipt) ProtoMessage()    {}
func (*TransactionReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{0}
}

func (m *TransactionReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReceipt.Unmarshal(m, b)
}
func (m *TransactionReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReceipt.Marshal(b, m, deterministic)
}
func (m *TransactionReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReceipt.Merge(m, src)
}
func (m *TransactionReceipt) XXX_Size() int {
	return xxx_messageInfo_TransactionReceipt.Size(m)
}
func (m *TransactionReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReceipt proto.InternalMessageInfo

func (m *TransactionReceipt) GetTransactionId() *aelf.Hash {
	if m != nil {
		return m.TransactionId
	}
	return nil
}

func (m *TransactionReceipt) GetTransaction() *aelf.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *TransactionReceipt) GetSignatureStatus() SignatureStatus {
	if m != nil {
		return m.SignatureStatus
	}
	return SignatureStatus_UnknownSignatureStatus
}

func (m *TransactionReceipt) GetRefBlockStatus() RefBlockStatus {
	if m != nil {
		return m.RefBlockStatus
	}
	return RefBlockStatus_UnknownRefBlockStatus
}

func (m *TransactionReceipt) GetTransactionStatus() TransactionStatus {
	if m != nil {
		return m.TransactionStatus
	}
	return TransactionStatus_UnknownTransactionStatus
}

func (m *TransactionReceipt) GetIsSystemTxn() bool {
	if m != nil {
		return m.IsSystemTxn
	}
	return false
}

func (m *TransactionReceipt) GetExecutedBlockNumber() int64 {
	if m != nil {
		return m.ExecutedBlockNumber
	}
	return 0
}

type StateValue struct {
	CurrentValue         []byte   `protobuf:"bytes,1,opt,name=CurrentValue,proto3" json:"CurrentValue,omitempty"`
	OriginalValue        []byte   `protobuf:"bytes,2,opt,name=OriginalValue,proto3" json:"OriginalValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateValue) Reset()         { *m = StateValue{} }
func (m *StateValue) String() string { return proto.CompactTextString(m) }
func (*StateValue) ProtoMessage()    {}
func (*StateValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{1}
}

func (m *StateValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateValue.Unmarshal(m, b)
}
func (m *StateValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateValue.Marshal(b, m, deterministic)
}
func (m *StateValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateValue.Merge(m, src)
}
func (m *StateValue) XXX_Size() int {
	return xxx_messageInfo_StateValue.Size(m)
}
func (m *StateValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StateValue.DiscardUnknown(m)
}

var xxx_messageInfo_StateValue proto.InternalMessageInfo

func (m *StateValue) GetCurrentValue() []byte {
	if m != nil {
		return m.CurrentValue
	}
	return nil
}

func (m *StateValue) GetOriginalValue() []byte {
	if m != nil {
		return m.OriginalValue
	}
	return nil
}

type StateChange struct {
	StatePath            *aelf.StatePath `protobuf:"bytes,1,opt,name=StatePath,proto3" json:"StatePath,omitempty"`
	StateValue           *StateValue     `protobuf:"bytes,2,opt,name=StateValue,proto3" json:"StateValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StateChange) Reset()         { *m = StateChange{} }
func (m *StateChange) String() string { return proto.CompactTextString(m) }
func (*StateChange) ProtoMessage()    {}
func (*StateChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{2}
}

func (m *StateChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateChange.Unmarshal(m, b)
}
func (m *StateChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateChange.Marshal(b, m, deterministic)
}
func (m *StateChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateChange.Merge(m, src)
}
func (m *StateChange) XXX_Size() int {
	return xxx_messageInfo_StateChange.Size(m)
}
func (m *StateChange) XXX_DiscardUnknown() {
	xxx_messageInfo_StateChange.DiscardUnknown(m)
}

var xxx_messageInfo_StateChange proto.InternalMessageInfo

func (m *StateChange) GetStatePath() *aelf.StatePath {
	if m != nil {
		return m.StatePath
	}
	return nil
}

func (m *StateChange) GetStateValue() *StateValue {
	if m != nil {
		return m.StateValue
	}
	return nil
}

type TransactionTrace struct {
	TransactionId        *aelf.Hash                         `protobuf:"bytes,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	ReturnValue          []byte                             `protobuf:"bytes,2,opt,name=ReturnValue,proto3" json:"ReturnValue,omitempty"`
	StdOut               string                             `protobuf:"bytes,3,opt,name=StdOut,proto3" json:"StdOut,omitempty"`
	StdErr               string                             `protobuf:"bytes,4,opt,name=StdErr,proto3" json:"StdErr,omitempty"`
	PreTransactions      []*aelf.Transaction                `protobuf:"bytes,5,rep,name=PreTransactions,proto3" json:"PreTransactions,omitempty"`
	PreTraces            []*TransactionTrace                `protobuf:"bytes,6,rep,name=PreTraces,proto3" json:"PreTraces,omitempty"`
	InlineTransactions   []*aelf.Transaction                `protobuf:"bytes,7,rep,name=InlineTransactions,proto3" json:"InlineTransactions,omitempty"`
	InlineTraces         []*TransactionTrace                `protobuf:"bytes,8,rep,name=InlineTraces,proto3" json:"InlineTraces,omitempty"`
	Logs                 []*aelf.LogEvent                   `protobuf:"bytes,9,rep,name=Logs,proto3" json:"Logs,omitempty"`
	Elapsed              int64                              `protobuf:"varint,10,opt,name=Elapsed,proto3" json:"Elapsed,omitempty"`
	ExecutionStatus      ExecutionStatus                    `protobuf:"varint,11,opt,name=ExecutionStatus,proto3,enum=aelf.ExecutionStatus" json:"ExecutionStatus,omitempty"`
	StateSet             *aelf.TransactionExecutingStateSet `protobuf:"bytes,12,opt,name=StateSet,proto3" json:"StateSet,omitempty"`
	DeferredTransaction  []byte                             `protobuf:"bytes,13,opt,name=DeferredTransaction,proto3" json:"DeferredTransaction,omitempty"`
	ReadableReturnValue  string                             `protobuf:"bytes,14,opt,name=ReadableReturnValue,proto3" json:"ReadableReturnValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *TransactionTrace) Reset()         { *m = TransactionTrace{} }
func (m *TransactionTrace) String() string { return proto.CompactTextString(m) }
func (*TransactionTrace) ProtoMessage()    {}
func (*TransactionTrace) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{3}
}

func (m *TransactionTrace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionTrace.Unmarshal(m, b)
}
func (m *TransactionTrace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionTrace.Marshal(b, m, deterministic)
}
func (m *TransactionTrace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionTrace.Merge(m, src)
}
func (m *TransactionTrace) XXX_Size() int {
	return xxx_messageInfo_TransactionTrace.Size(m)
}
func (m *TransactionTrace) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionTrace.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionTrace proto.InternalMessageInfo

func (m *TransactionTrace) GetTransactionId() *aelf.Hash {
	if m != nil {
		return m.TransactionId
	}
	return nil
}

func (m *TransactionTrace) GetReturnValue() []byte {
	if m != nil {
		return m.ReturnValue
	}
	return nil
}

func (m *TransactionTrace) GetStdOut() string {
	if m != nil {
		return m.StdOut
	}
	return ""
}

func (m *TransactionTrace) GetStdErr() string {
	if m != nil {
		return m.StdErr
	}
	return ""
}

func (m *TransactionTrace) GetPreTransactions() []*aelf.Transaction {
	if m != nil {
		return m.PreTransactions
	}
	return nil
}

func (m *TransactionTrace) GetPreTraces() []*TransactionTrace {
	if m != nil {
		return m.PreTraces
	}
	return nil
}

func (m *TransactionTrace) GetInlineTransactions() []*aelf.Transaction {
	if m != nil {
		return m.InlineTransactions
	}
	return nil
}

func (m *TransactionTrace) GetInlineTraces() []*TransactionTrace {
	if m != nil {
		return m.InlineTraces
	}
	return nil
}

func (m *TransactionTrace) GetLogs() []*aelf.LogEvent {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *TransactionTrace) GetElapsed() int64 {
	if m != nil {
		return m.Elapsed
	}
	return 0
}

func (m *TransactionTrace) GetExecutionStatus() ExecutionStatus {
	if m != nil {
		return m.ExecutionStatus
	}
	return ExecutionStatus_Undefined
}

func (m *TransactionTrace) GetStateSet() *aelf.TransactionExecutingStateSet {
	if m != nil {
		return m.StateSet
	}
	return nil
}

func (m *TransactionTrace) GetDeferredTransaction() []byte {
	if m != nil {
		return m.DeferredTransaction
	}
	return nil
}

func (m *TransactionTrace) GetReadableReturnValue() string {
	if m != nil {
		return m.ReadableReturnValue
	}
	return ""
}

type ExecutionReturnSet struct {
	TransactionId        *aelf.Hash                   `protobuf:"bytes,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	Status               aelf.TransactionResultStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=aelf.TransactionResultStatus" json:"Status,omitempty"`
	StateChanges         map[string][]byte            `protobuf:"bytes,3,rep,name=StateChanges,proto3" json:"StateChanges,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Bloom                []byte                       `protobuf:"bytes,4,opt,name=Bloom,proto3" json:"Bloom,omitempty"`
	DeferredTransactions []*aelf.Transaction          `protobuf:"bytes,5,rep,name=DeferredTransactions,proto3" json:"DeferredTransactions,omitempty"`
	ReturnValue          []byte                       `protobuf:"bytes,6,opt,name=ReturnValue,proto3" json:"ReturnValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ExecutionReturnSet) Reset()         { *m = ExecutionReturnSet{} }
func (m *ExecutionReturnSet) String() string { return proto.CompactTextString(m) }
func (*ExecutionReturnSet) ProtoMessage()    {}
func (*ExecutionReturnSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{4}
}

func (m *ExecutionReturnSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionReturnSet.Unmarshal(m, b)
}
func (m *ExecutionReturnSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionReturnSet.Marshal(b, m, deterministic)
}
func (m *ExecutionReturnSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionReturnSet.Merge(m, src)
}
func (m *ExecutionReturnSet) XXX_Size() int {
	return xxx_messageInfo_ExecutionReturnSet.Size(m)
}
func (m *ExecutionReturnSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionReturnSet.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionReturnSet proto.InternalMessageInfo

func (m *ExecutionReturnSet) GetTransactionId() *aelf.Hash {
	if m != nil {
		return m.TransactionId
	}
	return nil
}

func (m *ExecutionReturnSet) GetStatus() aelf.TransactionResultStatus {
	if m != nil {
		return m.Status
	}
	return aelf.TransactionResultStatus_NotExisted
}

func (m *ExecutionReturnSet) GetStateChanges() map[string][]byte {
	if m != nil {
		return m.StateChanges
	}
	return nil
}

func (m *ExecutionReturnSet) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

func (m *ExecutionReturnSet) GetDeferredTransactions() []*aelf.Transaction {
	if m != nil {
		return m.DeferredTransactions
	}
	return nil
}

func (m *ExecutionReturnSet) GetReturnValue() []byte {
	if m != nil {
		return m.ReturnValue
	}
	return nil
}

type BlockHeaderList struct {
	Headers              []*BlockHeader `protobuf:"bytes,1,rep,name=Headers,proto3" json:"Headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BlockHeaderList) Reset()         { *m = BlockHeaderList{} }
func (m *BlockHeaderList) String() string { return proto.CompactTextString(m) }
func (*BlockHeaderList) ProtoMessage()    {}
func (*BlockHeaderList) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{5}
}

func (m *BlockHeaderList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeaderList.Unmarshal(m, b)
}
func (m *BlockHeaderList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeaderList.Marshal(b, m, deterministic)
}
func (m *BlockHeaderList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeaderList.Merge(m, src)
}
func (m *BlockHeaderList) XXX_Size() int {
	return xxx_messageInfo_BlockHeaderList.Size(m)
}
func (m *BlockHeaderList) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeaderList.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeaderList proto.InternalMessageInfo

func (m *BlockHeaderList) GetHeaders() []*BlockHeader {
	if m != nil {
		return m.Headers
	}
	return nil
}

type BlockHeader struct {
	Version                           int32                `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	ChainId                           int32                `protobuf:"varint,2,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	PreviousBlockHash                 *aelf.Hash           `protobuf:"bytes,3,opt,name=PreviousBlockHash,proto3" json:"PreviousBlockHash,omitempty"`
	MerkleTreeRootOfTransactions      *aelf.Hash           `protobuf:"bytes,4,opt,name=MerkleTreeRootOfTransactions,proto3" json:"MerkleTreeRootOfTransactions,omitempty"`
	MerkleTreeRootOfWorldState        *aelf.Hash           `protobuf:"bytes,5,opt,name=MerkleTreeRootOfWorldState,proto3" json:"MerkleTreeRootOfWorldState,omitempty"`
	Bloom                             []byte               `protobuf:"bytes,6,opt,name=Bloom,proto3" json:"Bloom,omitempty"`
	Height                            int64                `protobuf:"varint,7,opt,name=Height,proto3" json:"Height,omitempty"`
	BlockExtraDatas                   [][]byte             `protobuf:"bytes,8,rep,name=BlockExtraDatas,proto3" json:"BlockExtraDatas,omitempty"`
	Time                              *timestamp.Timestamp `protobuf:"bytes,9,opt,name=Time,proto3" json:"Time,omitempty"`
	MerkleTreeRootOfTransactionStatus *aelf.Hash           `protobuf:"bytes,10,opt,name=MerkleTreeRootOfTransactionStatus,proto3" json:"MerkleTreeRootOfTransactionStatus,omitempty"`
	SignerPubkey                      []byte               `protobuf:"bytes,9999,opt,name=SignerPubkey,proto3" json:"SignerPubkey,omitempty"`
	Signature                         []byte               `protobuf:"bytes,10000,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}             `json:"-"`
	XXX_unrecognized                  []byte               `json:"-"`
	XXX_sizecache                     int32                `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{6}
}

func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (m *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(m, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockHeader) GetChainId() int32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *BlockHeader) GetPreviousBlockHash() *aelf.Hash {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *BlockHeader) GetMerkleTreeRootOfTransactions() *aelf.Hash {
	if m != nil {
		return m.MerkleTreeRootOfTransactions
	}
	return nil
}

func (m *BlockHeader) GetMerkleTreeRootOfWorldState() *aelf.Hash {
	if m != nil {
		return m.MerkleTreeRootOfWorldState
	}
	return nil
}

func (m *BlockHeader) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

func (m *BlockHeader) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockHeader) GetBlockExtraDatas() [][]byte {
	if m != nil {
		return m.BlockExtraDatas
	}
	return nil
}

func (m *BlockHeader) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *BlockHeader) GetMerkleTreeRootOfTransactionStatus() *aelf.Hash {
	if m != nil {
		return m.MerkleTreeRootOfTransactionStatus
	}
	return nil
}

func (m *BlockHeader) GetSignerPubkey() []byte {
	if m != nil {
		return m.SignerPubkey
	}
	return nil
}

func (m *BlockHeader) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BlockBody struct {
	BlockHeader          *aelf.Hash   `protobuf:"bytes,1,opt,name=BlockHeader,proto3" json:"BlockHeader,omitempty"`
	Transactions         []*aelf.Hash `protobuf:"bytes,2,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BlockBody) Reset()         { *m = BlockBody{} }
func (m *BlockBody) String() string { return proto.CompactTextString(m) }
func (*BlockBody) ProtoMessage()    {}
func (*BlockBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{7}
}

func (m *BlockBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockBody.Unmarshal(m, b)
}
func (m *BlockBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockBody.Marshal(b, m, deterministic)
}
func (m *BlockBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockBody.Merge(m, src)
}
func (m *BlockBody) XXX_Size() int {
	return xxx_messageInfo_BlockBody.Size(m)
}
func (m *BlockBody) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockBody.DiscardUnknown(m)
}

var xxx_messageInfo_BlockBody proto.InternalMessageInfo

func (m *BlockBody) GetBlockHeader() *aelf.Hash {
	if m != nil {
		return m.BlockHeader
	}
	return nil
}

func (m *BlockBody) GetTransactions() []*aelf.Hash {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type Block struct {
	Header               *BlockHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Body                 *BlockBody   `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{8}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetBody() *BlockBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type BinaryMerkleTree struct {
	Nodes                []*aelf.Hash `protobuf:"bytes,1,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	Root                 *aelf.Hash   `protobuf:"bytes,2,opt,name=Root,proto3" json:"Root,omitempty"`
	LeafCount            int32        `protobuf:"varint,3,opt,name=LeafCount,proto3" json:"LeafCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BinaryMerkleTree) Reset()         { *m = BinaryMerkleTree{} }
func (m *BinaryMerkleTree) String() string { return proto.CompactTextString(m) }
func (*BinaryMerkleTree) ProtoMessage()    {}
func (*BinaryMerkleTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{9}
}

func (m *BinaryMerkleTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryMerkleTree.Unmarshal(m, b)
}
func (m *BinaryMerkleTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryMerkleTree.Marshal(b, m, deterministic)
}
func (m *BinaryMerkleTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryMerkleTree.Merge(m, src)
}
func (m *BinaryMerkleTree) XXX_Size() int {
	return xxx_messageInfo_BinaryMerkleTree.Size(m)
}
func (m *BinaryMerkleTree) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryMerkleTree.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryMerkleTree proto.InternalMessageInfo

func (m *BinaryMerkleTree) GetNodes() []*aelf.Hash {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *BinaryMerkleTree) GetRoot() *aelf.Hash {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *BinaryMerkleTree) GetLeafCount() int32 {
	if m != nil {
		return m.LeafCount
	}
	return 0
}

type BlockAbstract struct {
	MinerPublicKey       string               `protobuf:"bytes,1,opt,name=MinerPublicKey,proto3" json:"MinerPublicKey,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockAbstract) Reset()         { *m = BlockAbstract{} }
func (m *BlockAbstract) String() string { return proto.CompactTextString(m) }
func (*BlockAbstract) ProtoMessage()    {}
func (*BlockAbstract) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{10}
}

func (m *BlockAbstract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockAbstract.Unmarshal(m, b)
}
func (m *BlockAbstract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockAbstract.Marshal(b, m, deterministic)
}
func (m *BlockAbstract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockAbstract.Merge(m, src)
}
func (m *BlockAbstract) XXX_Size() int {
	return xxx_messageInfo_BlockAbstract.Size(m)
}
func (m *BlockAbstract) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockAbstract.DiscardUnknown(m)
}

var xxx_messageInfo_BlockAbstract proto.InternalMessageInfo

func (m *BlockAbstract) GetMinerPublicKey() string {
	if m != nil {
		return m.MinerPublicKey
	}
	return ""
}

func (m *BlockAbstract) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type VersionedState struct {
	Key                  string     `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                []byte     `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	BlockHeight          int64      `protobuf:"varint,3,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	BlockHash            *aelf.Hash `protobuf:"bytes,4,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	OriginBlockHash      *aelf.Hash `protobuf:"bytes,5,opt,name=OriginBlockHash,proto3" json:"OriginBlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VersionedState) Reset()         { *m = VersionedState{} }
func (m *VersionedState) String() string { return proto.CompactTextString(m) }
func (*VersionedState) ProtoMessage()    {}
func (*VersionedState) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{11}
}

func (m *VersionedState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionedState.Unmarshal(m, b)
}
func (m *VersionedState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionedState.Marshal(b, m, deterministic)
}
func (m *VersionedState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionedState.Merge(m, src)
}
func (m *VersionedState) XXX_Size() int {
	return xxx_messageInfo_VersionedState.Size(m)
}
func (m *VersionedState) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionedState.DiscardUnknown(m)
}

var xxx_messageInfo_VersionedState proto.InternalMessageInfo

func (m *VersionedState) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VersionedState) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *VersionedState) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *VersionedState) GetBlockHash() *aelf.Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *VersionedState) GetOriginBlockHash() *aelf.Hash {
	if m != nil {
		return m.OriginBlockHash
	}
	return nil
}

type BlockStateSet struct {
	BlockHash            *aelf.Hash        `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	PreviousHash         *aelf.Hash        `protobuf:"bytes,2,opt,name=PreviousHash,proto3" json:"PreviousHash,omitempty"`
	BlockHeight          int64             `protobuf:"varint,3,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Changes              map[string][]byte `protobuf:"bytes,4,rep,name=Changes,proto3" json:"Changes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BlockStateSet) Reset()         { *m = BlockStateSet{} }
func (m *BlockStateSet) String() string { return proto.CompactTextString(m) }
func (*BlockStateSet) ProtoMessage()    {}
func (*BlockStateSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{12}
}

func (m *BlockStateSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockStateSet.Unmarshal(m, b)
}
func (m *BlockStateSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockStateSet.Marshal(b, m, deterministic)
}
func (m *BlockStateSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockStateSet.Merge(m, src)
}
func (m *BlockStateSet) XXX_Size() int {
	return xxx_messageInfo_BlockStateSet.Size(m)
}
func (m *BlockStateSet) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockStateSet.DiscardUnknown(m)
}

var xxx_messageInfo_BlockStateSet proto.InternalMessageInfo

func (m *BlockStateSet) GetBlockHash() *aelf.Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *BlockStateSet) GetPreviousHash() *aelf.Hash {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *BlockStateSet) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BlockStateSet) GetChanges() map[string][]byte {
	if m != nil {
		return m.Changes
	}
	return nil
}

type ChainStateInfo struct {
	ChainId              int32                   `protobuf:"varint,1,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	BlockHash            *aelf.Hash              `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	BlockHeight          int64                   `protobuf:"varint,3,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	MergingBlockHash     *aelf.Hash              `protobuf:"bytes,4,opt,name=MergingBlockHash,proto3" json:"MergingBlockHash,omitempty"`
	Status               ChainStateMergingStatus `protobuf:"varint,5,opt,name=Status,proto3,enum=aelf.ChainStateMergingStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ChainStateInfo) Reset()         { *m = ChainStateInfo{} }
func (m *ChainStateInfo) String() string { return proto.CompactTextString(m) }
func (*ChainStateInfo) ProtoMessage()    {}
func (*ChainStateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{13}
}

func (m *ChainStateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainStateInfo.Unmarshal(m, b)
}
func (m *ChainStateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainStateInfo.Marshal(b, m, deterministic)
}
func (m *ChainStateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainStateInfo.Merge(m, src)
}
func (m *ChainStateInfo) XXX_Size() int {
	return xxx_messageInfo_ChainStateInfo.Size(m)
}
func (m *ChainStateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainStateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChainStateInfo proto.InternalMessageInfo

func (m *ChainStateInfo) GetChainId() int32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *ChainStateInfo) GetBlockHash() *aelf.Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ChainStateInfo) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ChainStateInfo) GetMergingBlockHash() *aelf.Hash {
	if m != nil {
		return m.MergingBlockHash
	}
	return nil
}

func (m *ChainStateInfo) GetStatus() ChainStateMergingStatus {
	if m != nil {
		return m.Status
	}
	return ChainStateMergingStatus_Common
}

type ChainBlockLink struct {
	BlockHash            *aelf.Hash                    `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	Height               int64                         `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	PreviousBlockHash    *aelf.Hash                    `protobuf:"bytes,3,opt,name=PreviousBlockHash,proto3" json:"PreviousBlockHash,omitempty"`
	ExecutionStatus      ChainBlockLinkExecutionStatus `protobuf:"varint,4,opt,name=ExecutionStatus,proto3,enum=aelf.ChainBlockLinkExecutionStatus" json:"ExecutionStatus,omitempty"`
	IsIrreversibleBlock  bool                          `protobuf:"varint,5,opt,name=IsIrreversibleBlock,proto3" json:"IsIrreversibleBlock,omitempty"`
	IsLinked             bool                          `protobuf:"varint,6,opt,name=IsLinked,proto3" json:"IsLinked,omitempty"`
	IsLightBlock         bool                          `protobuf:"varint,7,opt,name=IsLightBlock,proto3" json:"IsLightBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ChainBlockLink) Reset()         { *m = ChainBlockLink{} }
func (m *ChainBlockLink) String() string { return proto.CompactTextString(m) }
func (*ChainBlockLink) ProtoMessage()    {}
func (*ChainBlockLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{14}
}

func (m *ChainBlockLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainBlockLink.Unmarshal(m, b)
}
func (m *ChainBlockLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainBlockLink.Marshal(b, m, deterministic)
}
func (m *ChainBlockLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainBlockLink.Merge(m, src)
}
func (m *ChainBlockLink) XXX_Size() int {
	return xxx_messageInfo_ChainBlockLink.Size(m)
}
func (m *ChainBlockLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainBlockLink.DiscardUnknown(m)
}

var xxx_messageInfo_ChainBlockLink proto.InternalMessageInfo

func (m *ChainBlockLink) GetBlockHash() *aelf.Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ChainBlockLink) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ChainBlockLink) GetPreviousBlockHash() *aelf.Hash {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *ChainBlockLink) GetExecutionStatus() ChainBlockLinkExecutionStatus {
	if m != nil {
		return m.ExecutionStatus
	}
	return ChainBlockLinkExecutionStatus_ExecutionNone
}

func (m *ChainBlockLink) GetIsIrreversibleBlock() bool {
	if m != nil {
		return m.IsIrreversibleBlock
	}
	return false
}

func (m *ChainBlockLink) GetIsLinked() bool {
	if m != nil {
		return m.IsLinked
	}
	return false
}

func (m *ChainBlockLink) GetIsLightBlock() bool {
	if m != nil {
		return m.IsLightBlock
	}
	return false
}

type Chain struct {
	Id                          int32             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	GenesisBlockHash            *aelf.Hash        `protobuf:"bytes,2,opt,name=GenesisBlockHash,proto3" json:"GenesisBlockHash,omitempty"`
	LongestChainHash            *aelf.Hash        `protobuf:"bytes,3,opt,name=LongestChainHash,proto3" json:"LongestChainHash,omitempty"`
	LongestChainHeight          int64             `protobuf:"varint,4,opt,name=LongestChainHeight,proto3" json:"LongestChainHeight,omitempty"`
	Branches                    map[string]int64  `protobuf:"bytes,5,rep,name=Branches,proto3" json:"Branches,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NotLinkedBlocks             map[string]string `protobuf:"bytes,6,rep,name=NotLinkedBlocks,proto3" json:"NotLinkedBlocks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastIrreversibleBlockHash   *aelf.Hash        `protobuf:"bytes,7,opt,name=LastIrreversibleBlockHash,proto3" json:"LastIrreversibleBlockHash,omitempty"`
	LastIrreversibleBlockHeight int64             `protobuf:"varint,8,opt,name=LastIrreversibleBlockHeight,proto3" json:"LastIrreversibleBlockHeight,omitempty"`
	BestChainHash               *aelf.Hash        `protobuf:"bytes,9,opt,name=BestChainHash,proto3" json:"BestChainHash,omitempty"`
	BestChainHeight             int64             `protobuf:"varint,10,opt,name=BestChainHeight,proto3" json:"BestChainHeight,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}          `json:"-"`
	XXX_unrecognized            []byte            `json:"-"`
	XXX_sizecache               int32             `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{15}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Chain) GetGenesisBlockHash() *aelf.Hash {
	if m != nil {
		return m.GenesisBlockHash
	}
	return nil
}

func (m *Chain) GetLongestChainHash() *aelf.Hash {
	if m != nil {
		return m.LongestChainHash
	}
	return nil
}

func (m *Chain) GetLongestChainHeight() int64 {
	if m != nil {
		return m.LongestChainHeight
	}
	return 0
}

func (m *Chain) GetBranches() map[string]int64 {
	if m != nil {
		return m.Branches
	}
	return nil
}

func (m *Chain) GetNotLinkedBlocks() map[string]string {
	if m != nil {
		return m.NotLinkedBlocks
	}
	return nil
}

func (m *Chain) GetLastIrreversibleBlockHash() *aelf.Hash {
	if m != nil {
		return m.LastIrreversibleBlockHash
	}
	return nil
}

func (m *Chain) GetLastIrreversibleBlockHeight() int64 {
	if m != nil {
		return m.LastIrreversibleBlockHeight
	}
	return 0
}

func (m *Chain) GetBestChainHash() *aelf.Hash {
	if m != nil {
		return m.BestChainHash
	}
	return nil
}

func (m *Chain) GetBestChainHeight() int64 {
	if m != nil {
		return m.BestChainHeight
	}
	return 0
}

type ChainBlockIndex struct {
	BlockHash            *aelf.Hash `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChainBlockIndex) Reset()         { *m = ChainBlockIndex{} }
func (m *ChainBlockIndex) String() string { return proto.CompactTextString(m) }
func (*ChainBlockIndex) ProtoMessage()    {}
func (*ChainBlockIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{16}
}

func (m *ChainBlockIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainBlockIndex.Unmarshal(m, b)
}
func (m *ChainBlockIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainBlockIndex.Marshal(b, m, deterministic)
}
func (m *ChainBlockIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainBlockIndex.Merge(m, src)
}
func (m *ChainBlockIndex) XXX_Size() int {
	return xxx_messageInfo_ChainBlockIndex.Size(m)
}
func (m *ChainBlockIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainBlockIndex.DiscardUnknown(m)
}

var xxx_messageInfo_ChainBlockIndex proto.InternalMessageInfo

func (m *ChainBlockIndex) GetBlockHash() *aelf.Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type TransactionBlockIndex struct {
	BlockHash            *aelf.Hash `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TransactionBlockIndex) Reset()         { *m = TransactionBlockIndex{} }
func (m *TransactionBlockIndex) String() string { return proto.CompactTextString(m) }
func (*TransactionBlockIndex) ProtoMessage()    {}
func (*TransactionBlockIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_123205fb86ada704, []int{17}
}

func (m *TransactionBlockIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionBlockIndex.Unmarshal(m, b)
}
func (m *TransactionBlockIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionBlockIndex.Marshal(b, m, deterministic)
}
func (m *TransactionBlockIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionBlockIndex.Merge(m, src)
}
func (m *TransactionBlockIndex) XXX_Size() int {
	return xxx_messageInfo_TransactionBlockIndex.Size(m)
}
func (m *TransactionBlockIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionBlockIndex.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionBlockIndex proto.InternalMessageInfo

func (m *TransactionBlockIndex) GetBlockHash() *aelf.Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func init() {
	proto.RegisterEnum("aelf.TransactionStatus", TransactionStatus_name, TransactionStatus_value)
	proto.RegisterEnum("aelf.SignatureStatus", SignatureStatus_name, SignatureStatus_value)
	proto.RegisterEnum("aelf.RefBlockStatus", RefBlockStatus_name, RefBlockStatus_value)
	proto.RegisterEnum("aelf.ExecutionStatus", ExecutionStatus_name, ExecutionStatus_value)
	proto.RegisterEnum("aelf.DataAccessMode", DataAccessMode_name, DataAccessMode_value)
	proto.RegisterEnum("aelf.BlockValidationResult", BlockValidationResult_name, BlockValidationResult_value)
	proto.RegisterEnum("aelf.ChainStateMergingStatus", ChainStateMergingStatus_name, ChainStateMergingStatus_value)
	proto.RegisterEnum("aelf.ChainBlockLinkExecutionStatus", ChainBlockLinkExecutionStatus_name, ChainBlockLinkExecutionStatus_value)
	proto.RegisterType((*TransactionReceipt)(nil), "aelf.TransactionReceipt")
	proto.RegisterType((*StateValue)(nil), "aelf.StateValue")
	proto.RegisterType((*StateChange)(nil), "aelf.StateChange")
	proto.RegisterType((*TransactionTrace)(nil), "aelf.TransactionTrace")
	proto.RegisterType((*ExecutionReturnSet)(nil), "aelf.ExecutionReturnSet")
	proto.RegisterMapType((map[string][]byte)(nil), "aelf.ExecutionReturnSet.StateChangesEntry")
	proto.RegisterType((*BlockHeaderList)(nil), "aelf.BlockHeaderList")
	proto.RegisterType((*BlockHeader)(nil), "aelf.BlockHeader")
	proto.RegisterType((*BlockBody)(nil), "aelf.BlockBody")
	proto.RegisterType((*Block)(nil), "aelf.Block")
	proto.RegisterType((*BinaryMerkleTree)(nil), "aelf.BinaryMerkleTree")
	proto.RegisterType((*BlockAbstract)(nil), "aelf.BlockAbstract")
	proto.RegisterType((*VersionedState)(nil), "aelf.VersionedState")
	proto.RegisterType((*BlockStateSet)(nil), "aelf.BlockStateSet")
	proto.RegisterMapType((map[string][]byte)(nil), "aelf.BlockStateSet.ChangesEntry")
	proto.RegisterType((*ChainStateInfo)(nil), "aelf.ChainStateInfo")
	proto.RegisterType((*ChainBlockLink)(nil), "aelf.ChainBlockLink")
	proto.RegisterType((*Chain)(nil), "aelf.Chain")
	proto.RegisterMapType((map[string]int64)(nil), "aelf.Chain.BranchesEntry")
	proto.RegisterMapType((map[string]string)(nil), "aelf.Chain.NotLinkedBlocksEntry")
	proto.RegisterType((*ChainBlockIndex)(nil), "aelf.ChainBlockIndex")
	proto.RegisterType((*TransactionBlockIndex)(nil), "aelf.TransactionBlockIndex")
}

func init() { proto.RegisterFile("kernel.proto", fileDescriptor_123205fb86ada704) }

var fileDescriptor_123205fb86ada704 = []byte{
	// 2029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0x4b, 0x73, 0x1b, 0x4b,
	0x15, 0xb6, 0x64, 0xf9, 0xa1, 0x23, 0x59, 0x1a, 0x77, 0x6c, 0x47, 0x51, 0x62, 0x70, 0x26, 0xd4,
	0x2d, 0x63, 0x40, 0x49, 0xdd, 0x07, 0x75, 0x2b, 0xa1, 0x72, 0xb1, 0x15, 0x85, 0xe8, 0x5e, 0x5b,
	0x71, 0x8d, 0x7c, 0x63, 0x36, 0x50, 0x8c, 0x67, 0x8e, 0xa4, 0x41, 0xa3, 0x6e, 0x57, 0xcf, 0xc8,
	0xd8, 0x6b, 0xd6, 0x14, 0x6c, 0x28, 0x56, 0xac, 0xd8, 0xc1, 0x3f, 0xa0, 0x8a, 0x9f, 0xc0, 0x7f,
	0xa0, 0x8a, 0xe2, 0x1f, 0x00, 0x3b, 0x1e, 0xd5, 0xdd, 0xf3, 0xe8, 0xd1, 0x28, 0x72, 0x12, 0xad,
	0xd4, 0xe7, 0x7c, 0xe7, 0xf4, 0xe9, 0xf3, 0xea, 0xd3, 0x03, 0xd5, 0x31, 0x72, 0x8a, 0x7e, 0xeb,
	0x92, 0xb3, 0x90, 0x91, 0x92, 0x8d, 0xfe, 0xa0, 0xf9, 0xcd, 0x21, 0x63, 0x43, 0x1f, 0x1f, 0x4b,
	0xda, 0xc5, 0x74, 0xf0, 0x38, 0xf4, 0x26, 0x18, 0x84, 0xf6, 0xe4, 0x52, 0xc1, 0x9a, 0x75, 0x01,
	0x7b, 0xec, 0x30, 0x8e, 0x8a, 0x60, 0xfe, 0x76, 0x19, 0xc8, 0x19, 0xb7, 0x69, 0x60, 0x3b, 0xa1,
	0xc7, 0xa8, 0x85, 0x0e, 0x7a, 0x97, 0x21, 0x79, 0x02, 0x1b, 0x1a, 0xb5, 0xeb, 0x36, 0x0a, 0x7b,
	0x85, 0xfd, 0xca, 0xc7, 0xd0, 0x12, 0xf2, 0xad, 0x57, 0x76, 0x30, 0xb2, 0xb2, 0x00, 0xf2, 0x09,
	0x54, 0x34, 0x42, 0xa3, 0x28, 0xf1, 0x9b, 0x0a, 0xaf, 0x6f, 0xa0, 0xa3, 0xc8, 0x17, 0x50, 0xef,
	0x7b, 0x43, 0x6a, 0x87, 0x53, 0x8e, 0xfd, 0xd0, 0x0e, 0xa7, 0x41, 0x63, 0x79, 0xaf, 0xb0, 0x5f,
	0xfb, 0x78, 0x5b, 0x09, 0xce, 0x30, 0xad, 0x59, 0x34, 0xf9, 0x01, 0xd4, 0x2c, 0x1c, 0x1c, 0xf9,
	0xcc, 0x19, 0x47, 0xf2, 0x25, 0x29, 0xbf, 0xa5, 0xe4, 0xb3, 0x3c, 0x6b, 0x06, 0x4b, 0x3a, 0xb0,
	0xa9, 0x59, 0x13, 0x29, 0x58, 0x91, 0x0a, 0xee, 0xe6, 0x2c, 0x8f, 0x74, 0xe4, 0x25, 0xc8, 0x1e,
	0x54, 0xba, 0x41, 0xff, 0x26, 0x08, 0x71, 0x72, 0x76, 0x4d, 0x1b, 0xab, 0x7b, 0x85, 0xfd, 0x75,
	0x4b, 0x27, 0x91, 0x27, 0x70, 0xa7, 0x73, 0x8d, 0xce, 0x34, 0x44, 0x57, 0xee, 0xdf, 0x9b, 0x4e,
	0x2e, 0x90, 0x37, 0xd6, 0xf6, 0x0a, 0xfb, 0xcb, 0xd6, 0x3c, 0x96, 0xf9, 0x06, 0x40, 0x68, 0xc7,
	0x37, 0xb6, 0x3f, 0x45, 0x62, 0x42, 0xb5, 0x3d, 0xe5, 0x1c, 0x69, 0x28, 0xd7, 0x32, 0x1a, 0x55,
	0x2b, 0x43, 0x23, 0xdf, 0x82, 0x8d, 0xd7, 0xdc, 0x1b, 0x7a, 0xd4, 0xf6, 0x15, 0xa8, 0x28, 0x41,
	0x59, 0xa2, 0x49, 0xa1, 0x22, 0xf5, 0xb6, 0x47, 0x36, 0x1d, 0x22, 0xf9, 0x1e, 0x94, 0xe5, 0xf2,
	0xd4, 0x0e, 0x47, 0x51, 0x8c, 0xeb, 0x91, 0xeb, 0x63, 0xb2, 0x95, 0x22, 0xc8, 0x13, 0xdd, 0xaa,
	0x28, 0xc6, 0x86, 0x86, 0x97, 0x74, 0x4b, 0xc3, 0x98, 0x7f, 0x5a, 0x01, 0x43, 0xf3, 0xd8, 0x19,
	0xb7, 0x1d, 0xfc, 0x80, 0xec, 0xda, 0x83, 0x8a, 0x85, 0xe1, 0x94, 0x53, 0xfd, 0x68, 0x3a, 0x89,
	0xec, 0xc0, 0x6a, 0x3f, 0x74, 0x5f, 0x4f, 0x43, 0x99, 0x41, 0x65, 0x2b, 0x5a, 0x45, 0xf4, 0x0e,
	0xe7, 0x32, 0x33, 0x14, 0xbd, 0xc3, 0x39, 0x79, 0x06, 0xf5, 0x53, 0x8e, 0xda, 0x2e, 0x22, 0xf2,
	0xcb, 0xf3, 0x73, 0x76, 0x16, 0x49, 0x3e, 0x85, 0xb2, 0x22, 0x39, 0x18, 0x34, 0x56, 0xa5, 0xd8,
	0x4e, 0x4e, 0x4c, 0xb2, 0xad, 0x14, 0x48, 0x0e, 0x81, 0x74, 0xa9, 0xef, 0xd1, 0xec, 0xae, 0x6b,
	0x6f, 0xdb, 0x75, 0x0e, 0x98, 0x3c, 0x85, 0x6a, 0x42, 0x15, 0x7b, 0xaf, 0x2f, 0xdc, 0x3b, 0x83,
	0x25, 0x26, 0x94, 0x8e, 0xd9, 0x30, 0x68, 0x94, 0xa5, 0x4c, 0x4d, 0xc9, 0x1c, 0xb3, 0x61, 0xe7,
	0x0a, 0x69, 0x68, 0x49, 0x1e, 0x69, 0xc0, 0x5a, 0xc7, 0xb7, 0x2f, 0x03, 0x74, 0x1b, 0x20, 0x93,
	0x33, 0x5e, 0x8a, 0x52, 0x55, 0x79, 0x9a, 0x56, 0x4a, 0x45, 0x2f, 0xd5, 0x19, 0xa6, 0x35, 0x8b,
	0x26, 0xcf, 0x61, 0x5d, 0xe6, 0x45, 0x1f, 0xc3, 0x46, 0x55, 0xc6, 0xdb, 0xcc, 0x99, 0x1d, 0xc9,
	0xd0, 0x61, 0x8c, 0xb4, 0x12, 0x19, 0x51, 0x43, 0x2f, 0x70, 0x80, 0x9c, 0xa3, 0xab, 0x37, 0x9a,
	0x0d, 0x99, 0x0a, 0xf3, 0x58, 0x42, 0xc2, 0x42, 0xdb, 0xb5, 0x2f, 0x7c, 0xd4, 0x93, 0xa7, 0x26,
	0xf3, 0x60, 0x1e, 0xcb, 0xfc, 0xd5, 0x32, 0x90, 0xc4, 0x6e, 0xc5, 0x50, 0x5b, 0xbf, 0x6f, 0xbe,
	0x7e, 0x26, 0xb2, 0x4e, 0x3a, 0xa9, 0x28, 0x9d, 0xb4, 0x9b, 0x0f, 0x2f, 0x06, 0x53, 0x3f, 0x8c,
	0x9c, 0x15, 0x81, 0x49, 0x0f, 0xaa, 0x5a, 0x75, 0x8a, 0x66, 0x28, 0x42, 0x75, 0x30, 0xe3, 0xe1,
	0xc4, 0xb0, 0x96, 0x0e, 0xee, 0xd0, 0x90, 0xdf, 0x58, 0x19, 0x79, 0xb2, 0x05, 0x2b, 0x47, 0x3e,
	0x63, 0x13, 0x99, 0xfb, 0x55, 0x4b, 0x2d, 0x48, 0x07, 0xb6, 0xe6, 0xb8, 0x6b, 0x41, 0xfe, 0xcf,
	0x85, 0xcf, 0xd6, 0xe4, 0x6a, 0xae, 0x26, 0x9b, 0x5f, 0xc0, 0x66, 0xce, 0x42, 0x62, 0xc0, 0xf2,
	0x18, 0x6f, 0xa4, 0x0b, 0xcb, 0x96, 0xf8, 0x2b, 0xac, 0xbc, 0xd2, 0xca, 0x5a, 0x2d, 0x9e, 0x16,
	0x3f, 0x2f, 0x98, 0xcf, 0xa1, 0x2e, 0x9b, 0xe2, 0x2b, 0xb4, 0x5d, 0xe4, 0xc7, 0x5e, 0x10, 0x92,
	0xef, 0xc0, 0x9a, 0x5a, 0x05, 0x8d, 0x82, 0x6e, 0xaf, 0x86, 0xb3, 0x62, 0x84, 0xf9, 0x97, 0x12,
	0x54, 0x34, 0x86, 0x48, 0xef, 0x37, 0xc8, 0x03, 0x91, 0x37, 0x62, 0xff, 0x15, 0x2b, 0x5e, 0x0a,
	0x4e, 0x7b, 0x64, 0x7b, 0x22, 0xb8, 0x45, 0xc5, 0x89, 0x96, 0xe4, 0x73, 0xd8, 0x3c, 0xe5, 0x78,
	0xe5, 0xb1, 0x69, 0xa0, 0x54, 0xd9, 0xc1, 0x48, 0xf6, 0x98, 0x6c, 0x02, 0xe4, 0x41, 0xa4, 0x07,
	0x0f, 0x4e, 0x90, 0x8f, 0x7d, 0x3c, 0xe3, 0x88, 0x16, 0x63, 0xe1, 0xeb, 0x41, 0xc6, 0xdf, 0xa5,
	0x9c, 0x92, 0x85, 0x78, 0xf2, 0x25, 0x34, 0x67, 0xf9, 0xe7, 0x8c, 0xfb, 0xae, 0xf4, 0xb1, 0xbc,
	0xb7, 0xb2, 0xda, 0x16, 0xa0, 0xd3, 0xcc, 0x58, 0xd5, 0x33, 0x63, 0x07, 0x56, 0x5f, 0xa1, 0x37,
	0x1c, 0x85, 0xd1, 0xd5, 0x14, 0xad, 0xc8, 0x7e, 0x14, 0x87, 0xce, 0x75, 0xc8, 0xed, 0x17, 0x76,
	0x68, 0xab, 0xce, 0x53, 0xb5, 0x66, 0xc9, 0xa4, 0x05, 0xa5, 0x33, 0x6f, 0x82, 0x8d, 0xb2, 0xb4,
	0xa6, 0xd9, 0x52, 0x03, 0x49, 0x2b, 0x1e, 0x48, 0x5a, 0x67, 0xf1, 0x40, 0x62, 0x49, 0x1c, 0xf9,
	0x31, 0x3c, 0x5c, 0x70, 0xe6, 0xa8, 0x86, 0x20, 0x77, 0xb4, 0xdb, 0x85, 0xc8, 0x23, 0xa8, 0x8a,
	0x69, 0x01, 0xf9, 0xe9, 0xf4, 0x42, 0x24, 0xdc, 0xaf, 0x7b, 0xea, 0xd2, 0xd4, 0x89, 0x64, 0x17,
	0xca, 0xc9, 0x48, 0xd1, 0xf8, 0x8d, 0x42, 0xa4, 0x14, 0xd3, 0x83, 0xb2, 0x3c, 0xe0, 0x11, 0x73,
	0x6f, 0xc8, 0x77, 0x33, 0xb9, 0x34, 0xa7, 0x07, 0x64, 0x52, 0xad, 0x05, 0xd5, 0x4c, 0xb0, 0x8b,
	0x32, 0x59, 0x75, 0x78, 0x86, 0x6f, 0x9e, 0xcb, 0x80, 0x38, 0x63, 0xf2, 0x6d, 0x11, 0x03, 0x6d,
	0x87, 0x39, 0xf9, 0x1d, 0x01, 0xc8, 0x23, 0x28, 0x09, 0xcb, 0xa2, 0x8b, 0xb8, 0xae, 0x01, 0x05,
	0xd9, 0x92, 0x4c, 0x93, 0x83, 0x71, 0xe4, 0x51, 0x9b, 0xdf, 0xa4, 0x2e, 0x23, 0x7b, 0xb0, 0xd2,
	0x63, 0x2e, 0xc6, 0x25, 0xa4, 0x5b, 0xa5, 0x18, 0xe4, 0x1b, 0x50, 0x12, 0x8e, 0x8d, 0x54, 0xeb,
	0x00, 0x49, 0x27, 0x0f, 0xa0, 0x7c, 0x8c, 0xf6, 0xa0, 0xcd, 0xa6, 0x54, 0xdd, 0xb8, 0x2b, 0x56,
	0x4a, 0x30, 0x87, 0xb0, 0x21, 0xcd, 0x38, 0xbc, 0x08, 0x42, 0x6e, 0x3b, 0x21, 0xf9, 0x08, 0x6a,
	0x27, 0x9e, 0x72, 0xbb, 0xef, 0x39, 0x5f, 0x25, 0xf5, 0x3f, 0x43, 0x4d, 0xd2, 0xa7, 0xf8, 0x6e,
	0xe9, 0x63, 0xfe, 0xb9, 0x00, 0xb5, 0xa8, 0x84, 0x31, 0xca, 0x6c, 0x03, 0x96, 0x53, 0xfd, 0xe2,
	0xaf, 0xc8, 0x75, 0x7d, 0x6c, 0x50, 0x0b, 0xd1, 0xbe, 0x22, 0x9f, 0xca, 0x84, 0x5f, 0x96, 0x09,
	0xaf, 0x93, 0xc8, 0x7e, 0x14, 0x7d, 0x59, 0xf1, 0xf9, 0x62, 0x4d, 0x99, 0xe4, 0x53, 0xa8, 0xab,
	0x31, 0x2b, 0xc5, 0xe7, 0xcb, 0x71, 0x16, 0x62, 0xfe, 0xb2, 0x18, 0xb9, 0x29, 0xb9, 0xe3, 0x32,
	0x3b, 0x16, 0x16, 0xed, 0xd8, 0x82, 0x6a, 0xdc, 0x70, 0x24, 0x38, 0x1f, 0xa7, 0x0c, 0xff, 0x1d,
	0x4e, 0xfb, 0x54, 0x76, 0x40, 0x79, 0xed, 0x94, 0x64, 0x56, 0xec, 0x69, 0xf9, 0x14, 0x5b, 0xd8,
	0xca, 0x5c, 0x36, 0xb1, 0x40, 0xf3, 0x29, 0x54, 0x3f, 0xb8, 0xc7, 0xff, 0xa3, 0x00, 0x35, 0xd9,
	0x6b, 0xe5, 0x1e, 0x5d, 0x3a, 0x60, 0x7a, 0x33, 0x2e, 0x64, 0x9b, 0x71, 0xc6, 0x41, 0xc5, 0x45,
	0x0e, 0xba, 0xfd, 0xc0, 0xdf, 0x07, 0xe3, 0x04, 0xf9, 0xd0, 0xa3, 0xc3, 0x45, 0x51, 0xce, 0x61,
	0xb4, 0xbb, 0x7d, 0x45, 0xbf, 0xdb, 0xd3, 0x33, 0x44, 0x12, 0xd9, 0xbb, 0xdd, 0xfc, 0x6b, 0x31,
	0x3a, 0xa7, 0xd4, 0x74, 0xec, 0xd1, 0xf1, 0x7b, 0x84, 0x3b, 0x6d, 0xcc, 0xc5, 0x4c, 0x63, 0xfe,
	0xf0, 0xcb, 0xe9, 0x24, 0x3f, 0xcf, 0xa9, 0xa7, 0xd3, 0x23, 0xed, 0x38, 0x89, 0xa9, 0xb7, 0x4e,
	0x77, 0x4f, 0xe0, 0x4e, 0x37, 0xe8, 0x72, 0x8e, 0x57, 0xa2, 0x1a, 0x2f, 0x7c, 0x94, 0xa2, 0xd2,
	0x43, 0xeb, 0xd6, 0x3c, 0x16, 0x69, 0xc2, 0x7a, 0x37, 0x10, 0xba, 0xd1, 0x8d, 0x9e, 0x4c, 0xc9,
	0x5a, 0xbc, 0x77, 0xc4, 0xff, 0xe1, 0x28, 0x54, 0x6a, 0xd6, 0x24, 0x3f, 0x43, 0x33, 0xff, 0xb0,
	0x02, 0x2b, 0xd2, 0x48, 0x52, 0x83, 0x62, 0x92, 0x29, 0xc5, 0xae, 0x2b, 0x02, 0xfb, 0x23, 0xa4,
	0x18, 0x78, 0xc1, 0xa2, 0x5c, 0xc9, 0x61, 0x84, 0xdc, 0x31, 0x13, 0x49, 0x1c, 0x4a, 0xbd, 0x6f,
	0xf1, 0x65, 0x0e, 0x43, 0x5a, 0x40, 0x32, 0x34, 0x15, 0xa8, 0x92, 0x0c, 0xd4, 0x1c, 0x0e, 0xf9,
	0x0c, 0xd6, 0x8f, 0xb8, 0x4d, 0x9d, 0x11, 0xc6, 0x33, 0xd7, 0x3d, 0xcd, 0xe7, 0xad, 0x98, 0xa7,
	0x6a, 0x2c, 0x81, 0x92, 0x2f, 0xa1, 0xde, 0x63, 0xa1, 0xf2, 0x90, 0x34, 0x3a, 0x7e, 0x7a, 0xec,
	0xe9, 0xd2, 0x33, 0x10, 0xa5, 0x64, 0x56, 0x90, 0xbc, 0x82, 0x7b, 0xc7, 0x76, 0x10, 0xe6, 0xa2,
	0x22, 0xcf, 0xbc, 0x96, 0x3b, 0xf3, 0xdb, 0xc1, 0xe4, 0x87, 0x70, 0x7f, 0x3e, 0x53, 0x79, 0x61,
	0x5d, 0x7a, 0x61, 0x11, 0x44, 0x4c, 0xd7, 0x47, 0x19, 0x9f, 0x97, 0xf3, 0xd3, 0x75, 0x06, 0x20,
	0xc7, 0x91, 0x19, 0x6f, 0xab, 0xd7, 0xca, 0x2c, 0xb9, 0xf9, 0x0c, 0x36, 0x32, 0xee, 0xbc, 0xad,
	0x33, 0x2d, 0x6b, 0x9d, 0xa9, 0x79, 0x04, 0x5b, 0xf3, 0xbc, 0x79, 0x9b, 0x8e, 0xb2, 0xde, 0xdd,
	0x9e, 0x41, 0x3d, 0xad, 0xa4, 0x2e, 0x75, 0xf1, 0xfa, 0xdd, 0xab, 0xde, 0x3c, 0x84, 0x6d, 0x6d,
	0x46, 0xf8, 0x10, 0x15, 0x07, 0xee, 0x9c, 0x4f, 0x1c, 0xe4, 0x01, 0x34, 0xbe, 0xa6, 0x63, 0xca,
	0x7e, 0x41, 0x73, 0x3c, 0x63, 0x89, 0x34, 0x60, 0x6b, 0xde, 0x93, 0xcc, 0x28, 0x90, 0xbb, 0x70,
	0x27, 0xc7, 0x41, 0xd7, 0x28, 0x1e, 0xfc, 0x2c, 0xf7, 0x1d, 0x87, 0x34, 0x61, 0x27, 0xda, 0x63,
	0x86, 0x63, 0x2c, 0x11, 0x02, 0xb5, 0x84, 0xf8, 0xc6, 0xf6, 0x3d, 0xd7, 0x28, 0x90, 0x5d, 0x30,
	0x12, 0x5a, 0x97, 0x5e, 0x49, 0xea, 0xff, 0xe2, 0x5f, 0xe1, 0xe0, 0x77, 0x85, 0xd9, 0x2f, 0x3d,
	0xe4, 0x1e, 0x6c, 0x47, 0x3b, 0x64, 0x19, 0xc6, 0x12, 0xd9, 0x84, 0x8d, 0x98, 0x16, 0xeb, 0x7f,
	0x00, 0xf5, 0x98, 0x94, 0x57, 0xaf, 0x73, 0x3b, 0xd7, 0x97, 0x1e, 0x47, 0xd7, 0xf8, 0x6f, 0xca,
	0xbd, 0x0f, 0xb5, 0x97, 0x53, 0x61, 0x58, 0x8c, 0x31, 0xfe, 0x93, 0x5a, 0xf6, 0xb7, 0x42, 0xae,
	0x93, 0x92, 0x0d, 0x28, 0x7f, 0x4d, 0x5d, 0x1c, 0x78, 0x14, 0x5d, 0x63, 0x89, 0x54, 0x61, 0x3d,
	0x71, 0x56, 0x81, 0x6c, 0xc3, 0x7a, 0xdb, 0xa6, 0x0e, 0xfa, 0x98, 0x31, 0xa1, 0x01, 0x15, 0xf5,
	0xc1, 0xa8, 0xc3, 0x39, 0xe3, 0xfa, 0xf6, 0x4d, 0xd8, 0x68, 0x33, 0x2a, 0x07, 0x29, 0xc5, 0xfb,
	0x77, 0xca, 0x7b, 0x08, 0x5b, 0x9d, 0x6b, 0x07, 0xd1, 0x45, 0xf7, 0xc4, 0xbe, 0x6e, 0xdb, 0xbe,
	0xff, 0x02, 0x2f, 0xc3, 0x91, 0xf1, 0xaf, 0x14, 0xb2, 0x0f, 0xf7, 0xbb, 0x34, 0x98, 0x0e, 0x06,
	0x9e, 0xe3, 0x21, 0x0d, 0xb5, 0x08, 0xbe, 0x44, 0x0c, 0x8c, 0x7f, 0xa6, 0xc8, 0x1d, 0xf9, 0x59,
	0x63, 0x60, 0x7b, 0xc2, 0xb4, 0xdf, 0xa7, 0x47, 0xfc, 0x29, 0xd4, 0xc4, 0x74, 0x7f, 0xe8, 0x38,
	0x18, 0x04, 0x27, 0xcc, 0x45, 0x11, 0x5d, 0xf1, 0x7e, 0x7e, 0x4d, 0xfd, 0x9b, 0x43, 0xc7, 0x11,
	0x33, 0x5f, 0x7f, 0x64, 0x73, 0x91, 0x25, 0x4b, 0xe4, 0x3e, 0xdc, 0x15, 0xbc, 0x73, 0xee, 0x85,
	0x38, 0xc3, 0x2c, 0x90, 0x3b, 0x50, 0x8f, 0x69, 0x97, 0xe8, 0x78, 0x03, 0xcf, 0x31, 0x8a, 0x07,
	0x7f, 0x2f, 0xc2, 0x76, 0x1a, 0x2c, 0x3b, 0x7d, 0x1e, 0x93, 0x0a, 0xac, 0xf5, 0xa7, 0x72, 0x5b,
	0xe5, 0xc6, 0x1e, 0x0b, 0xe5, 0xc4, 0x68, 0x54, 0x84, 0xa6, 0x28, 0x90, 0x62, 0x12, 0xec, 0xfb,
	0x2c, 0x34, 0xaa, 0xe4, 0x23, 0x30, 0x5f, 0x4a, 0xf3, 0xcf, 0x58, 0x7b, 0x84, 0xce, 0xb8, 0xcd,
	0x68, 0x80, 0x34, 0x98, 0x06, 0x11, 0x54, 0xea, 0x36, 0x36, 0x44, 0x82, 0xbc, 0x60, 0x1e, 0x1d,
	0x5a, 0xcc, 0xf7, 0x2f, 0x6c, 0x67, 0x6c, 0xd4, 0x48, 0x3d, 0x1a, 0x18, 0xba, 0x41, 0x6f, 0xea,
	0xfb, 0x06, 0x8a, 0x3a, 0xe8, 0xdb, 0x13, 0x3c, 0xf7, 0xc2, 0x51, 0xf4, 0xa1, 0xcd, 0x62, 0x53,
	0xea, 0x1a, 0x03, 0xf2, 0x10, 0x76, 0xbb, 0xd4, 0x61, 0x9c, 0xa3, 0x13, 0x26, 0x3b, 0x68, 0x7e,
	0x35, 0x86, 0xc4, 0x80, 0xea, 0xa9, 0xcd, 0x03, 0x3c, 0xe5, 0xec, 0xc2, 0xc7, 0x89, 0x31, 0x12,
	0x5b, 0xf6, 0x98, 0x0e, 0xf2, 0xc8, 0x2e, 0xdc, 0x4b, 0xf4, 0x9c, 0x5d, 0x67, 0x9f, 0x34, 0xc6,
	0xcf, 0x85, 0x93, 0x13, 0x76, 0xdf, 0x73, 0x51, 0x0d, 0x41, 0x74, 0xc0, 0x8c, 0x31, 0xd9, 0x01,
	0x92, 0xf0, 0x4e, 0xd9, 0xb9, 0x72, 0x97, 0xe1, 0x8b, 0xa2, 0xe8, 0xb1, 0xb0, 0x3b, 0xb9, 0xf4,
	0x71, 0x82, 0x34, 0xb5, 0xce, 0x98, 0x1c, 0x3c, 0x87, 0xbb, 0x6f, 0x99, 0x51, 0x08, 0xc0, 0x6a,
	0x9b, 0x4d, 0x26, 0x8c, 0x1a, 0x4b, 0xc2, 0xe5, 0x11, 0xd3, 0x28, 0x08, 0x86, 0x58, 0xc8, 0x22,
	0xff, 0x09, 0xec, 0x2e, 0x1c, 0x0a, 0xc4, 0x09, 0x13, 0x52, 0x8f, 0x51, 0x34, 0x96, 0xc8, 0x16,
	0x18, 0x29, 0x2a, 0x0a, 0xa4, 0x4c, 0x82, 0x84, 0xaa, 0xc2, 0x65, 0x14, 0x8f, 0x6a, 0x7f, 0x2c,
	0x56, 0x0e, 0x3b, 0xfe, 0xa0, 0xf5, 0x95, 0xfc, 0xae, 0x7d, 0xb1, 0x2a, 0x87, 0xfe, 0x4f, 0xfe,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x61, 0xc2, 0x75, 0xdf, 0xe8, 0x16, 0x00, 0x00,
}
