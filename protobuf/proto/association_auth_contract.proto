syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "acs3.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
option csharp_namespace = "AElf.Contracts.AssociationAuth";

service AssociationAuthContract {
    option (aelf.csharp_state) = "AElf.Contracts.AssociationAuth.AssociationAuthState";
    option (aelf.base) = "acs3.proto";
    // Actions    
    rpc CreateOrganization (CreateOrganizationInput) returns (aelf.Address) {        
    }
    //view
    rpc GetOrganization (aelf.Address) returns (Organization) {
        option (aelf.is_view) = true;
    }
}

message CreateOrganizationInput{
    repeated Reviewer reviewers = 1;
    int32 releaseThreshold = 2;
    int32 proposerThreshold = 3;
}

message Organization{
    int32 releaseThreshold = 1;
    repeated Reviewer reviewers = 2;
    int32 proposerThreshold = 3;
    aelf.Address organizationAddress = 4;
    aelf.Hash organizationHash = 5;
}

message Reviewer {
    aelf.Address address  = 1;
    int32 weight = 2;
}

message ProposalInfo {
    aelf.Hash proposalId = 1;
    string contractMethodName = 2;
    aelf.Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    aelf.Address proposer = 6;
    aelf.Address organizationAddress = 7;
    int32 approvedWeight = 8;
    repeated aelf.Address approvedReviewer = 9;
}