syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "acs3.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
option csharp_namespace = "AElf.Contracts.ReferendumAuth";

service ReferendumAuthContract {
    option (aelf.csharp_state) = "AElf.Contracts.ReferendumAuth.ReferendumAuthState";
    option (aelf.base) = "acs3.proto";
    // Actions
    rpc Initialize (google.protobuf.Empty) returns (google.protobuf.Empty) {
    }
    rpc ReclaimVoteToken (aelf.Hash) returns (google.protobuf.Empty) {
    }
    rpc CreateOrganization (CreateOrganizationInput) returns (aelf.Address) {
    }
    rpc GetOrganization (aelf.Address) returns (Organization) {
        option (aelf.is_view) = true;
    }
}

message CreateOrganizationInput{
    int64 releaseThreshold = 1;
    string tokenSymbol = 2;
}

message Organization{
    int64 releaseThreshold = 1;
    string tokenSymbol = 2;
    aelf.Address organizationAddress = 3;
    aelf.Hash organizationHash = 4;
}

message Receipt{
    int64 amount = 1;
    string tokenSymbol = 2;
    aelf.Hash lockId = 3;
}

message ProposalInfo {
    aelf.Hash proposalId = 1;
    string contractMethodName = 2;
    aelf.Address toAddress = 3;
    bytes params = 4;
    google.protobuf.Timestamp expiredTime = 5;
    aelf.Address proposer = 6;
    aelf.Address organizationAddress = 7;
}